
{'Error': ValueError("invalid literal for int() with base 10: 'a'"), 'errortime': datetime.datetime(2025, 4, 10, 19, 18, 6, 655000)}
{'Error': ValueError("invalid literal for int() with base 10: 'asdf'"), 'errortime': datetime.datetime(2025, 4, 10, 19, 18, 12, 384936)}
{'Error': ValueError("invalid literal for int() with base 10: 'printing error in different line'"), 'errortime': datetime.datetime(2025, 4, 10, 19, 18, 26, 254065)}
{'Error': ValueError("invalid literal for int() with base 10: 'hi'"), 'errortime': datetime.datetime(2025, 4, 10, 19, 20, 0, 717234)}
{'error': ValueError("invalid literal for int() with base 10: 'qwert'"), 'errortime': datetime.datetime(2025, 4, 10, 19, 22, 49, 69035), 'function': 'input_number()'}
{'function': 'input_number()', 'error': ValueError("invalid literal for int() with base 10: 'a-1'"), 'errortime': datetime.datetime(2025, 4, 10, 19, 24, 0, 739322)}
{'module': 'squared_numbers.py', 'function': 'input_number()', 'error': ValueError("invalid literal for int() with base 10: ''"), 'errortime': datetime.datetime(2025, 4, 10, 20, 40, 41, 331040)}
{'module': 'squared_numbers.py', 'function': 'input_number()', 'error': ValueError("invalid literal for int() with base 10: '2.5'"), 'errortime': datetime.datetime(2025, 4, 11, 7, 11, 30, 440959)}
{'module': 'squared_numbers.py', 'function': 'input_number()', 'error': ValueError("invalid literal for int() with base 10: '2.5'"), 'errortime': datetime.datetime(2025, 4, 11, 7, 11, 50, 491632)}
{'module': 'squared_numbers.py', 'function': 'input_number()', 'error': ValueError("invalid literal for int() with base 10: '2.5'"), 'errortime': datetime.datetime(2025, 4, 11, 7, 12, 24, 926841)}
{'module': 'squared_numbers.py', 'function': 'input_number()', 'error': ValueError("invalid literal for int() with base 10: 'a'"), 'errortime': datetime.datetime(2025, 4, 11, 7, 17, 14, 750838)}
{'module': 'calculator_func.py', 'function': 'numbers_input()', 'Error': ValueError("invalid literal for int() with base 10: 'error'"), 'date': datetime.datetime(2025, 4, 11, 7, 53, 47, 227990)}
{'module': 'calculator_func.py', 'function': 'numbers_input()', 'Error': ValueError("invalid literal for int() with base 10: ''"), 'date': datetime.datetime(2025, 4, 11, 7, 54, 42, 550436)}
{'module': 'dynamic_percentage.py', 'function': 'main.py()', 'error': ValueError("invalid literal for int() with base 10: 'a'"), 'date': datetime.datetime(2025, 4, 11, 8, 4, 49, 860581)}
{'module': 'dynamic_percentage.py', 'function': 'main.py()', 'error': ValueError("invalid literal for int() with base 10: 'a'"), 'date': datetime.datetime(2025, 4, 11, 8, 5, 52, 179423)}
{'module': 'dynamic_percentage.py', 'function': 'main.py()', 'error': ValueError("invalid literal for int() with base 10: 'not a number'"), 'date': datetime.datetime(2025, 4, 11, 8, 6, 34, 377918)}
{'module': 'dynamic_percentage.py', 'function': 'main.py()', 'error': ValueError("invalid literal for int() with base 10: 'a'"), 'date': datetime.datetime(2025, 4, 11, 8, 20, 21, 475083)}
<<<<<<< HEAD
{'module': 'dynamic_percentage.py', 'function': 'main.py()', 'error': ValueError("invalid literal for int() with base 10: 'bca'"), 'date': datetime.datetime(2025, 4, 11, 8, 20, 27, 536416)}
=======
{'module': 'dynamic_percentage.py', 'function': 'main.py()', 'error': ValueError("invalid literal for int() with base 10: 'bca'"), 'date': datetime.datetime(2025, 4, 11, 8, 20, 27, 536416)}
{'module': 'error_source.py', 'function': 'err_source', 'error': "invalid literal for int() with base 10: 'using separate function to get error source details'", 'date': datetime.datetime(2025, 4, 11, 9, 13, 58, 2789)}
{'module': 'error_source.py', 'function': 'err_source', 'error': 'invalid literal for int() with base 10: \'python -u "d:\\\\Repositories\\\\2025\\\\python\\\\SRC\\\\calculator_func.py"\'', 'date': datetime.datetime(2025, 4, 11, 9, 20, 38, 821794)}
{'module': 'error_source.py', 'function': 'err_source', 'error': "invalid literal for int() with base 10: 'a'", 'date': datetime.datetime(2025, 4, 11, 9, 20, 50, 822221)}
{'module': 'error_source.py', 'function': 'err_source', 'error': "invalid literal for int() with base 10: 'zxcvb'", 'date': datetime.datetime(2025, 4, 11, 9, 20, 55, 41015)}
{'module': 'error_source.py', 'function': 'err_source', 'error': "invalid literal for int() with base 10: 'five'", 'date': datetime.datetime(2025, 4, 11, 10, 33, 5, 346723), 'line': 11}
{'module': 'error_source.py', 'function': 'err_source', 'error': "invalid literal for int() with base 10: 'a'", 'date': datetime.datetime(2025, 4, 11, 10, 34, 55, 624637), 'line': 11}
>>>>>>> 7959194c4f8b6bfae647041d94a7f9f60580ce6b
